@model Hotels_Resrevation.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

    <div style="height: 90vh;display: grid;text-align: center; justify-content: center; align-items: center;">
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "ui form", role = "form" }))
        {
        <h2>@Hotels_Resrevation.Resources.Login.Login.Create_New_Account</h2>
            @Html.AntiForgeryToken()            
            <hr />
            @Html.ValidationSummary("", new { style = "color: red" })
            <div class="field">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" }) 
                <div class="ui input">
                    @Html.TextBoxFor(m => m.Email)
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" }) 
                <div class="ui input">
                    @Html.PasswordFor(m => m.Password)
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" }) 
                <div class="ui input">
                    @Html.PasswordFor(m => m.ConfirmPassword)
                </div>
            </div>            
            <div class="field">
                @Html.LabelFor(m => m.TypeOfUser, new { @class = "col-md-2 control-label" }) 
                <select class="ui fluid dropdown" name="TypeOfUser" onchange="toggleLocation(event)">
                    @foreach(var item in Hotels_Resrevation.ViewModels.Lists.TypeOfUsers)
                    {
                        <option value="@item.Text">@item.Text</option>
                    }                            
                </select>
            </div>            
            <div class="field" id="location">
                @Html.LabelFor(m => m.Location, new { @class = "col-md-2 control-label" })
                <div class="ui input">
                    @Html.DropDownListFor(m => m.Location, Hotels_Resrevation.ViewModels.Lists.Locations, null, new { @class = "ui fluid selection dropdown" })
                </div>
            </div>
            <div class="form-group">
                <div style="margin-top: 10px;">
                    <button type="submit" class="ui secondary button">
                        @Hotels_Resrevation.Resources.HomeIndex.Register
                    </button>
                </div>
            </div>
        }
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    function toggleLocation(event) {
        let value = event.target.value;
        const location = document.querySelector("#location");
        if (value === 'Hotel') {
            location.style.display = "block";
        }
        else {
            location.style.display = "none";
        }
    }
</script>
}
